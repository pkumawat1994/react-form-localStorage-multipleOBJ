{"ast":null,"code":"var _jsxFileName = \"/home/parmanandkumawat/Desktop/parmanand/react-form/register/src/components/Showuser.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 70\n}, {\n  field: \"name\",\n  headerName: \"First name\",\n  width: 130\n}, {\n  field: \"email\",\n  headerName: \"EMAIL\",\n  type: \"email\",\n  width: 90\n}, {\n  field: \"age\",\n  headerName: \"Age\",\n  type: \"number\",\n  width: 90\n} // {\n//   field: \"fullName\",\n//   headerName: \"Full name\",\n//   description: \"This column has a value getter and is not sortable.\",\n//   sortable: false,\n//   width: 160,\n//   valueGetter: (params: GridValueGetterParams) =>\n//     `${params.row.name || \"\"} ${params.row.lastName || \"\"}`,\n// },\n,,];\nconst rows = [{\n  id: 1,\n  lastName: \"Snow\",\n  firstName: \"Jon\",\n  age: 35\n}, {\n  id: 2,\n  lastName: \"Lannister\",\n  firstName: \"Cersei\",\n  age: 42\n}, {\n  id: 3,\n  lastName: \"Lannister\",\n  firstName: \"Jaime\",\n  age: 45\n}, {\n  id: 4,\n  lastName: \"Stark\",\n  firstName: \"Arya\",\n  age: 16\n}, {\n  id: 5,\n  lastName: \"Targaryen\",\n  firstName: \"Daenerys\",\n  age: null\n}, {\n  id: 6,\n  lastName: \"Melisandre\",\n  firstName: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: \"Clifford\",\n  firstName: \"Ferrara\",\n  age: 44\n}, {\n  id: 8,\n  lastName: \"Frances\",\n  firstName: \"Rossini\",\n  age: 36\n}, {\n  id: 9,\n  lastName: \"Roxie\",\n  firstName: \"Harvey\",\n  age: 65\n}];\n\nconst Showuser = () => {\n  _s();\n\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    const myLocaldata = localStorage.getItem(\"register\"); // console.log(myLocaldata);\n\n    setData(myLocaldata);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [console.log(data), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\",\n        marginTop: \"50px\",\n        backgroundColor: \"orange\",\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: data,\n        columns: columns,\n        pageSize: 6,\n        rowsPerPageOptions: [5],\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Showuser, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Showuser;\nexport default Showuser;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showuser\");","map":{"version":3,"names":["React","Container","DataGrid","GridColDef","GridValueGetterParams","columns","field","headerName","width","type","rows","id","lastName","firstName","age","Showuser","data","setData","useState","useEffect","myLocaldata","localStorage","getItem","console","log","height","marginTop","backgroundColor","padding"],"sources":["/home/parmanandkumawat/Desktop/parmanand/react-form/register/src/components/Showuser.js"],"sourcesContent":["import * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 70 },\n  { field: \"name\", headerName: \"First name\", width: 130 },\n  {\n    field:\"email\",\n    headerName:\"EMAIL\",\n    type:\"email\",\n    width:90\n  },\n\n  {\n    field: \"age\",\n    headerName: \"Age\",\n    type: \"number\",\n    width: 90,\n  },\n  ,\n  // {\n  //   field: \"fullName\",\n  //   headerName: \"Full name\",\n  //   description: \"This column has a value getter and is not sortable.\",\n  //   sortable: false,\n  //   width: 160,\n  //   valueGetter: (params: GridValueGetterParams) =>\n  //     `${params.row.name || \"\"} ${params.row.lastName || \"\"}`,\n  // },\n];\n\nconst rows = [\n  { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n  { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n  { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n  { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n  { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n  { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n  { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n  { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n  { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\n];\n\nconst Showuser = () => {\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    const myLocaldata = localStorage.getItem(\"register\");\n    // console.log(myLocaldata);\n    setData(myLocaldata);\n  }, []);\n  return (\n    <Container maxWidth=\"md\">\n      {console.log(data)}\n      <div\n        style={{\n          height: 500,\n          width: \"100%\",\n          marginTop: \"50px\",\n          backgroundColor: \"orange\",\n          padding: \"20px\",\n        }}\n      >\n        <DataGrid\n          rows={data}\n          columns={columns}\n          pageSize={6}\n          rowsPerPageOptions={[5]}\n          checkboxSelection\n        />\n      </div>\n    </Container>\n  );\n};\nexport default Showuser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}